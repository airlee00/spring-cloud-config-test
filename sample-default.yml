#------spring boot 에서 지정한 properties -----

spring:
  kafka:
    bootstrap-servers:
    - localhost:9092
    consumer:
      group-id: siTestGroup
      auto-offset-reset: latest
      enable-auto-commit: false
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      batch-size: 16384
      buffer-memory: 33554432
      retries: 0
      acks: 0
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      
  servlet:
# 부트 톰캣에서 사용하는 첨부파일 사이즈        
    multipart:
      max-file-size: 100000000000
      max-request-size: 100000000000
      
server:
    # 서버 포트, 로컬에서 사용
    port: 8090
    servlet:
        context-path: /exm

## 사용 안하는 듯    
management:
    endpoints:
        web:
            exposure:
                include: "*"
    endpoint:
        shutdown:
            enabled: true
#---------honeProp--------
hone:
    health:
      sql-exception-check:
        enabled: true
    msg:
      log:
        input-msg-logging:
          enabled: false
    message-source.table-name: TBL_COMCMD0100
    # 세션 유형에 사용 type : none , jdbc, redis
    session:
#      type: none
#      timeout: 60
#      redis:
#          host: 127.0.0.1
#          port: 6379
    # 캐시 설정 type : none, redis hone.cache.redis.loglevel
    cache:
      #type: none
      redis:
          host: 127.0.0.1
          port: 6379
          #loglevel조정을 redis를 이용할 경우 접속정보는 cache와 공유 
          loglevel:
              enabled: true
          expireTimes:
          - cacheName: fwk-message
            expireTime: 10    
          - cacheName: fwk-code
            expireTime: 10    
    # 카프카에서 사용 ProducerChannelConfig, ConsumerChannelConfig 참고
    kafka:
      producer:
          topic: si-topic
          enabled: false
      consumer:
          enabled: false 
          topics:
          - topic : si-topic
          concurrent:
               enabled: false
      loglevel:
          consumer: 
              enabled: false  
    security:
        session.maximumSessions: 1
        # spring security에서 인증 예외 페이지 
        #ignore.path: /actuator/**,/hlicp/**,/jersey/**,/files/**,/redis/**,/loglevel/**,/index.html,/css/**,/html/**,/image/**,/script/**,/index.jsp,/hello,/**/favicon.*,**/*.html,/kafka/**
        ignore.path: /**

    # componentScan 범위 설정                
    app:
        base-package: hlicp
    # componentScan 범위 설정                
    web:
        base-package: hlicp.**.web
        #web.xml 사용모드 default : false, BaseWebApplicationInitializer 참조
        use-webxml.enabled: false
    systemheader:
        # 모니터링, DefaultServiceMessageExtension 참조
        classname: hone.ext.online.web.message.HlicpMessageHeader
        #MessageTypeResolver 에서 사용,             
        message-classname: hone.ext.online.web.message.HlicpSimpleJsonMessage
        outbound-message-classname: hone.ext.online.web.message.HlicpSimpleOnlineMessage
        
    # 서비스 모니터링, ServicesControlStore 참조
    monitor.control.services:
        enabled: false
        exceptionClass: hone.bom.BomException
        idBaseExceptionClass: hone.bom.CodedBomException
    # ???? 용처 찾기 어려움
    log:
        data:
            gathering: true
            encrypt: false
        mode: BOTH
    online:
        # 잭슨의 java.sql.data의 날짜 포맷에 사용
        date-format: yyyyMMddHHmmss 
        # RPC , RpcServiceRegisterContextEventListener 참조
        instance.baseUrl: 
        executor:
            # 비동기 코어 사이즈, AsyncConfig 참조
            corePoolSize: 45
    config:
        # 프로퍼티 관리 Holder에 사용, CommonConfig 참조
        systemConfigType: default
    #파일저장경로 => {base-path}/{policy-path}/yyyy/mm/dd/UUID.확장자와 같이 생성 
    # files.base-path, temp-path 값이 없을 경우 FileUploadConfig가 작동하지 않는다 
    files:
      base-path:  /Users/kichaelee/temp
      temp-path:  /Users/kichaelee/temp
      table-name: TBL_COMCBT0005
     # policy-path: '{systemCode}/{filesId}/online'
     # system-code-mapping: icm=cust,ics=cust
      maxFileSize: 10000000
      dataSourceName: exmDS
     # open-allowed-extension: ppt,pptx,png,jpg,jpeg,gif,bmp,png,pdf,doc,docx,xls,xlsx,mht
    # 배치 설정
    batch:
        server:
            default: http://127.0.0.1:17311/bat/hone/batch
        data.home: E:/DEV/hone/batch
    # service 수행 트랜잭션 관련        
    transaction:
        # 트랜잭션 사용여부, false면 스프링이 제공하는 트랜잭션을 사용 안 한다, 즉 예외 발생 시 rollback 작동 안함
        transaction-control: true
        # 서비스 실행시 무조건 스프링 트랜잭션 생성 
        transaction-control-forced: true
        #type : 'datasource', 'chained', 'jta'   default => 'datasource'
        transaction-manager-type: jta
        # 부모 클래스에 따라 트랜잭션 타입을 분리하는 옵션, 한화생명에서 사용 안함
        #transaction-control-typed: xx
        #transaction-control-typed-map: xx
        # transactionTemplate 타임아웃 설정, 단위는 초
        transaction-timeout: 120
        atomikosProperty:
            com-atomikos-icatch-log_base_dir: /Users/kichaelee/temp/log22
            com-atomikos-icatch-max_actives: 100   
            #com-atomikos-icatch-max_timeout: 120000
            #com-atomikos-icatch-default_jta_timeout: 120000
    datasource-map:
        # 'file', 'map', 'properties'
        type: file
        #policy 'default' : bean 이름이 dataSource를 찾음, 'package': 패키지로 매핑된 ds를 찾음 
        policy: package
        packages:
            "[hlicp.exm]": exmDS
            "[hlicp.aco]": exmDS  
            "[hone.ext]": exmDS 
    datasources:
      - exmDS
 #     - comDS
      - honeDataSource
      
      #시스템 연계 및 spring-integration 설정 
    integration:
        inbound-gateway:
            additional-path: /hlicp/{appCode}/{serviceId}   
        eai:
            server:
                ip: 000.000.000.000
                port: 0000
        api:
            encoding: UTF-8
            # 배치 호출 타임아웃, OnBatchConfig 참조
            connect-timeout: 10000
            read-timeout: 90000
            #RestApiClient 를 통해 rest 호출, 즉 CLI 컴포넌트 호출시 사용하는 타겟 정보
            url: 
                mci: http://localhost:8881/exm2
                esb: http://localhost:8881/exm2
        # db 암호화 툴 설정 정보
        ksign:
            enabled: false


#비즈니스 
#비즈니스 
central:
    test: aaa111
    test1: bbb222
    test2: ccc333
    test3: ddd444
#======공통 항목 E=========


# 개발 
---
spring.profiles: dev
hone:
    transaction:
        atomikosProperty:
            com-atomikos-icatch-log_base_dir: /Users/kichaelee/temp/log222
            com-atomikos-icatch-max_actives: 10   
            com-atomikos-icatch-max_timeout: 120000
            #com-atomikos-icatch-default_jta_timeout: 120000
    datasource-map:
        # 'file', 'map', 'properties'
        type: file
        #policy 'default' : bean 이름이 dataSource를 찾음, 'package': 패키지로 매핑된 ds를 찾음 
        policy: package
        packages:
            "[hlicp.exm]": exmDS
            "[hlicp.aco]": exmDS  
            "[hone.ext]": exmDS 
    datasources:
      - exmDS
 #     - comDS
      - honeDataSource
---
spring.profiles: stg

---
spring.profiles: prd
